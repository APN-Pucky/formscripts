
Symbols s,t,u,dim,m1,...,m3,U,MG,MGs,MU,MX,MXs,MUs,Q,gs,L#C,R#C,LG#C,RG#C,Lp#C,Rp#C,LGp#C,RGp#C,MG,Tr,Nc,Cf,Ca,dr;
dimension dim;
AutoDeclare Tensor tens;
AutoDeclare Vector p,ll,k,l;
AutoDeclare Index mu,nu,rho,kappa,gamma,sigma;
AutoDeclare Symbol sym;
Vectors p1,H,pu,pb,q,l1,l2;
Tensors f(antisymmetric),polsum(symmetric),Gamma;
Function PL,PR,df,da,VF;
CFunctions T,A,B,D,Denom,DIMD,C,C0,C1,C2,C00,C11,C12,C22,DIMDC00;
Indices a,o,n,m,tm,tn,beta,b,betap,alphap,a,alpha,ind,delta,k,j,l,c,d;
L TMP = (1/768)*(Denom(-MUs+u))*(Denom(-MGs+t))*(pi_^-1)*(pi_^-1)*(Cf)*(Nc)*(-2*C0*s^-1*MG*MX*MXs*MUs^2*R*LG*Rp*LGp-2*C0*s^-1*MG*MX*MXs*MUs^2*L*RG*Lp*RGp+2*C0*s^-1*t*MG*MX*MUs^2*R*LG*Rp*LGp+2*C0*s^-1*t*MG*MX*MUs^2*L*RG*Lp*RGp+4*C0*s^-1*t*MG*MX*MXs*MUs*R*LG*Rp*LGp+4*C0*s^-1*t*MG*MX*MXs*MUs*L*RG*Lp*RGp-4*C0*s^-1*t^2*MG*MX*MUs*R*LG*Rp*LGp-4*C0*s^-1*t^2*MG*MX*MUs*L*RG*Lp*RGp-2*C0*s^-1*t^2*MG*MX*MXs*R*LG*Rp*LGp-2*C0*s^-1*t^2*MG*MX*MXs*L*RG*Lp*RGp+2*C0*s^-1*t^3*MG*MX*R*LG*Rp*LGp+2*C0*s^-1*t^3*MG*MX*L*RG*Lp*RGp+C0*MG*MX*MXs*MUs*R*LG*Rp*LGp+C0*MG*MX*MXs*MUs*L*RG*Lp*RGp-3*C0*t*MG*MX*MUs*R*LG*Rp*LGp-3*C0*t*MG*MX*MUs*L*RG*Lp*RGp-C0*t*MG*MX*MXs*R*LG*Rp*LGp-C0*t*MG*MX*MXs*L*RG*Lp*RGp+3*C0*t^2*MG*MX*R*LG*Rp*LGp+3*C0*t^2*MG*MX*L*RG*Lp*RGp+C0*s*t*MG*MX*R*LG*Rp*LGp+C0*s*t*MG*MX*L*RG*Lp*RGp-C2*MXs^2*MUs*R*RG*Lp*LGp-C2*MXs^2*MUs*L*LG*Rp*RGp+2*C2*MG*MX*MXs*MUs*R*LG*Rp*LGp+2*C2*MG*MX*MXs*MUs*L*RG*Lp*RGp+C2*t*MXs^2*R*RG*Lp*LGp+C2*t*MXs^2*L*LG*Rp*RGp-2*C2*t*MG*MX*MUs*R*LG*Rp*LGp-2*C2*t*MG*MX*MUs*L*RG*Lp*RGp-2*C2*t*MG*MX*MXs*R*LG*Rp*LGp-2*C2*t*MG*MX*MXs*L*RG*Lp*RGp+C2*t^2*MUs*R*RG*Lp*LGp+C2*t^2*MUs*L*LG*Rp*RGp+2*C2*t^2*MG*MX*R*LG*Rp*LGp+2*C2*t^2*MG*MX*L*RG*Lp*RGp-C2*t^3*R*RG*Lp*LGp-C2*t^3*L*LG*Rp*RGp-C2*s*t*MXs*R*RG*Lp*LGp-C2*s*t*MXs*L*LG*Rp*RGp+2*C2*s*t*MG*MX*R*LG*Rp*LGp+2*C2*s*t*MG*MX*L*RG*Lp*RGp-C2*s*t^2*R*RG*Lp*LGp-C2*s*t^2*L*LG*Rp*RGp-4*C00*s^-1*MXs*MUs^2*R*RG*Lp*LGp-4*C00*s^-1*MXs*MUs^2*L*LG*Rp*RGp+4*C00*s^-1*t*MUs^2*R*RG*Lp*LGp+4*C00*s^-1*t*MUs^2*L*LG*Rp*RGp+8*C00*s^-1*t*MXs*MUs*R*RG*Lp*LGp+8*C00*s^-1*t*MXs*MUs*L*LG*Rp*RGp-8*C00*s^-1*t^2*MUs*R*RG*Lp*LGp-8*C00*s^-1*t^2*MUs*L*LG*Rp*RGp-4*C00*s^-1*t^2*MXs*R*RG*Lp*LGp-4*C00*s^-1*t^2*MXs*L*LG*Rp*RGp+4*C00*s^-1*t^3*R*RG*Lp*LGp+4*C00*s^-1*t^3*L*LG*Rp*RGp+2*C00*MXs*MUs*R*RG*Lp*LGp+2*C00*MXs*MUs*L*LG*Rp*RGp-6*C00*t*MUs*R*RG*Lp*LGp-6*C00*t*MUs*L*LG*Rp*RGp-2*C00*t*MXs*R*RG*Lp*LGp-2*C00*t*MXs*L*LG*Rp*RGp+6*C00*t^2*R*RG*Lp*LGp+6*C00*t^2*L*LG*Rp*RGp+2*C00*s*t*R*RG*Lp*LGp+2*C00*s*t*L*LG*Rp*RGp+2*C12*MXs*MUs^2*R*RG*Lp*LGp+2*C12*MXs*MUs^2*L*LG*Rp*RGp-2*C12*t*MUs^2*R*RG*Lp*LGp-2*C12*t*MUs^2*L*LG*Rp*RGp-4*C12*t*MXs*MUs*R*RG*Lp*LGp-4*C12*t*MXs*MUs*L*LG*Rp*RGp+4*C12*t^2*MUs*R*RG*Lp*LGp+4*C12*t^2*MUs*L*LG*Rp*RGp+2*C12*t^2*MXs*R*RG*Lp*LGp+2*C12*t^2*MXs*L*LG*Rp*RGp-2*C12*t^3*R*RG*Lp*LGp-2*C12*t^3*L*LG*Rp*RGp-C12*s*MXs*MUs*R*RG*Lp*LGp-C12*s*MXs*MUs*L*LG*Rp*RGp+3*C12*s*t*MUs*R*RG*Lp*LGp+3*C12*s*t*MUs*L*LG*Rp*RGp+C12*s*t*MXs*R*RG*Lp*LGp+C12*s*t*MXs*L*LG*Rp*RGp-3*C12*s*t^2*R*RG*Lp*LGp-3*C12*s*t^2*L*LG*Rp*RGp-C12*s^2*t*R*RG*Lp*LGp-C12*s^2*t*L*LG*Rp*RGp+2*C22*MXs*MUs^2*R*RG*Lp*LGp+2*C22*MXs*MUs^2*L*LG*Rp*RGp-2*C22*t*MUs^2*R*RG*Lp*LGp-2*C22*t*MUs^2*L*LG*Rp*RGp-4*C22*t*MXs*MUs*R*RG*Lp*LGp-4*C22*t*MXs*MUs*L*LG*Rp*RGp+4*C22*t^2*MUs*R*RG*Lp*LGp+4*C22*t^2*MUs*L*LG*Rp*RGp+2*C22*t^2*MXs*R*RG*Lp*LGp+2*C22*t^2*MXs*L*LG*Rp*RGp-2*C22*t^3*R*RG*Lp*LGp-2*C22*t^3*L*LG*Rp*RGp-C22*s*MXs*MUs*R*RG*Lp*LGp-C22*s*MXs*MUs*L*LG*Rp*RGp+3*C22*s*t*MUs*R*RG*Lp*LGp+3*C22*s*t*MUs*L*LG*Rp*RGp+C22*s*t*MXs*R*RG*Lp*LGp+C22*s*t*MXs*L*LG*Rp*RGp-3*C22*s*t^2*R*RG*Lp*LGp-3*C22*s*t^2*L*LG*Rp*RGp-C22*s^2*t*R*RG*Lp*LGp-C22*s^2*t*L*LG*Rp*RGp+2*DIMDC00*s^-1*dim*MXs*MUs^2*R*RG*Lp*LGp+2*DIMDC00*s^-1*dim*MXs*MUs^2*L*LG*Rp*RGp-2*DIMDC00*s^-1*t*dim*MUs^2*R*RG*Lp*LGp-2*DIMDC00*s^-1*t*dim*MUs^2*L*LG*Rp*RGp-4*DIMDC00*s^-1*t*dim*MXs*MUs*R*RG*Lp*LGp-4*DIMDC00*s^-1*t*dim*MXs*MUs*L*LG*Rp*RGp+4*DIMDC00*s^-1*t^2*dim*MUs*R*RG*Lp*LGp+4*DIMDC00*s^-1*t^2*dim*MUs*L*LG*Rp*RGp+2*DIMDC00*s^-1*t^2*dim*MXs*R*RG*Lp*LGp+2*DIMDC00*s^-1*t^2*dim*MXs*L*LG*Rp*RGp-2*DIMDC00*s^-1*t^3*dim*R*RG*Lp*LGp-2*DIMDC00*s^-1*t^3*dim*L*LG*Rp*RGp-DIMDC00*dim*MXs*MUs*R*RG*Lp*LGp-DIMDC00*dim*MXs*MUs*L*LG*Rp*RGp+3*DIMDC00*t*dim*MUs*R*RG*Lp*LGp+3*DIMDC00*t*dim*MUs*L*LG*Rp*RGp+DIMDC00*t*dim*MXs*R*RG*Lp*LGp+DIMDC00*t*dim*MXs*L*LG*Rp*RGp-3*DIMDC00*t^2*dim*R*RG*Lp*LGp-3*DIMDC00*t^2*dim*L*LG*Rp*RGp-DIMDC00*s*t*dim*R*RG*Lp*LGp-DIMDC00*s*t*dim*L*LG*Rp*RGp)*(gs)*(gs)*(gs)*(gs);;Format C; Factorize;Print TMP;.sort;